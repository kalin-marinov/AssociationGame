@page "/players"
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@inject LocalStorage Storage
@inject NavigationManager NavigationManager


<style>
    #players-setup{
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        padding: 40px;
        min-height:calc(100vh - 80px);
        background-size: 90px;

        background-color: #eae4ca;
        background-image: url("/img/puzzle.svg");

    }

    #list-centered{
        width:80%;
        max-width: 800px;
        min-width: 330px;
    }

    #list-centered ul li{
        text-shadow: 1px 1px 2px #c1c1c1;
    }

</style>

<section id="players-setup">

    <section id="list-centered" class="players">

      @if(gameData.Players.Any())
        {
            <ul>
                @foreach (var item in gameData.Players)
                {
                    <li> 
                        <span class="usr-icon">
                            <img src="/img/user2.svg" />
                        </span>
                        <span class="usr-name"> 
                            @item.Name
                        </span>
                        <span>
                            <button class="remove-btn" @onclick="@(() => RemovePlayer(item.Name))" > X </button>
                        </span>
                    </li>
                }
            </ul>
        }

        <form @onsubmit="AddPlayer">
            <input @bind="newPlayerName" placeholder="Player name" />
            <button type="submit" class="add-btn" > + </button>
        </form>
    </section>


    @if(gameData.PlayersValid)
    {
        <button @onclick="Save" class="success-btn"> 
            <img src="/img/success.svg" />
            <span> Done </span>
        </button>
    }
</section>

@code{
    string newPlayerName;
    GameData gameData;

    override protected void OnParametersSet()
    {
        var storedPlayers = Storage.GetItem<IEnumerable<Player>>("players");
        this.gameData = new GameData(storedPlayers ?? Enumerable.Empty<Player>());
    }

    void AddPlayer()
    {
        gameData.AddPlayer(newPlayerName);
        newPlayerName = null;
    }

    void RemovePlayer(string name)
    {
        gameData.RemovePlayer(name);
    }


    void Save()
    {
        Storage.SetItem("players", gameData.Players);
        NavigationManager.NavigateTo("/words");
    }
}

